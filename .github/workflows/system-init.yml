name: System Initialization

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'docs/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  initialize:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Set up GCS infrastructure
        id: gcs-setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/setup_gcs.py
          
          # Commit GCS config if changed
          if [[ -n $(git status --porcelain config/) ]]; then
            git add config/
            git commit -m "chore: Update GCS configuration"
            git push
          fi
          
          # Set bucket name for subsequent steps
          echo "bucket_name=$(cat config/gcs.json | jq -r .GCS_BUCKET_NAME)" >> $GITHUB_OUTPUT
          
      - name: Initialize fresh database
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/init_db.py
          
      - name: Process profile data
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/profile_scraper.py
          
      - name: Process resume
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/resume_parser.py
          
      - name: Process cover letter
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/cover_letter_parser.py
          
      - name: Combine and summarize
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/combine_and_summarize.py
          
      - name: Generate job strategy
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/job_strategy.py

      - name: Generate GitHub Pages
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GCS_BUCKET_NAME: ${{ steps.gcs-setup.outputs.bucket_name }}
        run: |
          python scripts/generate_github_pages.py

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'feat: Initialize system with fresh data'
          title: 'Initialize System'
          body: |
            System initialization completed:
            
            - Set up GCS infrastructure
            - Created fresh database
            - Processed profile, resume, and cover letter
            - Generated initial job strategy
            - Set up GitHub Pages
            
            Please review the changes and merge to complete initialization.
          branch: system-init
          delete-branch: true
          base: main